package threads;

public class Main {
    public static void main(String[] args) throws InterruptedException {
/*
        New
        ѕоток создан, но ещЄ не стартовал. ќн остаетс€ в таком состо€нии, пока не будет вызван метод start().
        2
        Runnable
        ѕоток в активной фазе. ќн либо исполн€ет операции пользу€сь временем, данным ему планировщиком потоков, либо ждет, когда планировщик потоков выделит ему процессорные ресурсы.
        3
        Blocked
        ѕоток в данный момент не может продолжать работу. ќн находитс€ в таком состо€нии, когда не может получить доступ к коду, который синхронизирован и заблокирован работой другого потока (про синхронизацию поговорим в другой теме).
        4
        Waiting
        ѕоток ждет, пока другой поток или потоки не выполн€т определенные действи€. Ќапример, текущий поток находитс€ в режиме ожидани€, когда на другом потоке вызван метод join().
        5
        Timed_Waiting
        “о же, что и Waiting, только врем€ ожидани€ определено заранее. ѕримеры: методы join(long millis), sleep(long millis).
        6
        Terminated
        Ёто состо€ние завершившего работу потока. ѕричем завершившего работу нормально или с ошибкой Ч неважно. ѕомните, что после того как поток вошел в эту стадию, снова запустить его не получитс€! Java в этом случае бросит ошибку в Runtime. —оздавайте новый объект Thread и запускайте его.
*/
    }
}
