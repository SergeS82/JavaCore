Наша программа будет исполняться следующим образом:
-   При запуске программы JVM выделяет память под кучу и стеки, происходит загрузка в кучу системных классов. Далее создается главный поток исполнения и его стек.
-   Главный поток начинает выполнение метода main(), создается первый стек-фрейм Frame#1.
-   В куче создается строковый объект "Eugene", в Frame#1 записывается ссылка на него.
-   В Frame#1 записывается значение переменной age.
-   В Frame#1 сперва загружается класс Person, далее в куче происходит аллокация памяти под соответствующий объект Person, в Frame#1 записывается ссылка на объект. Стоит отметить, что оба эти действия происходят одновременно и неразрывно (атомарно).
-   Перед исполнением конструктора на вершине стека создаётся новый фрейм Frame#2. Т.к в Java ссылки и примитивы передаются по значению, в Frame#2 записываются копии ссылок на объект Person и на строку  "Eugene". Исполнение переходит в конструктор.
-   В конструкторе происходит копирование ссылки на строку "Eugene" в соответствующее поле. Исполнение конструктора заканчивается, память под Frame#2 становится свободной.
-   Исполнение возвращается в метод main(). Аналогично вызову конструктора происходит вызов метода setAge, создаётся и уничтожается ещё один стек-фрейм.
-   Метод main() завершает исполнение, освобождается память, выделенная под Frame#1, главный поток завершает исполнение. Программа заканчивается, следовательно, JVM освобождает всю память и завершает работу.